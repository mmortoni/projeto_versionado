git init
|-->  git add . (sempre antes do commit)
|--> git rm (-f) arquivo (deleta do git e da pasta)
|--> git restore index.html  ()
|--> git checkout -- index.html  (restaura a versão anterior do arquivo, antes de um git add)
|-- git commit -m 'mensagem'

git remote -v

git remote add origin https://github.com/mmortoni/projeto_versionado.git
git push --set-upstream origin master (empurra/mover do ambiente local para o servidor)
git pull (puxar/extrair do servidor para o ambiente local)
- executar: fetch e 
git clone - repositório do servidor
git fetch  (apresenta a situação atual das branchs no servidor)

Voltar a um determinado estado
git reset --soft HEAD~
git reset --soft ab319bc

$ git reset HEAD~
ou
$ git reset --mixed HEAD~

git reset --hard HEAD~
o ponteiro HEAD será movido para o commit anterior e as áreas de stage e working serão revertidas para o mesmo estado do commit apontado pelo HEAD.


git checkout - receber as branchs do servidor e atualizar o estado da branch localmente.
git merge 

Se você estiver no branch feature-1 e quiser puxar master -- (talvez para obter as atualizações mescladas mais recentes/reduzir a chance de conflitos de mesclagem), faça:

git pull
git merge origin/develop


Como pull executa uma mesclagem nas alterações recuperadas, você deve garantir que seu trabalho local seja confirmado antes de executar o pull comando. Se você se deparar com um conflito de mesclagem que não pode resolver, ou se decidir encerrar a mesclagem, você pode usar git merge --abort para levar a ramificação de volta para onde estava antes de fazer o pull.

git merge (trabalho aprovado) --> master (remoto)
git checkout master (branch master - local desejada)

git merge feature/atualizacao_html
git log (verifica localmente branch/master e mais as ações executadas na feature/atualizacao_html)
git push (atualiza a master remoto)
